/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.0.2).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.egym.recruiting.codingtask.api;

import java.util.List;
import java.util.Optional;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.context.request.NativeWebRequest;

import com.egym.recruiting.codingtask.model.RankingUser;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-04-25T15:49:22.268+02:00[Europe/Berlin]")

@Validated
@Api(value = "ranking", description = "the ranking API")
public interface RankingApi {

	default Optional<NativeWebRequest> getRequest() {
		return Optional.empty();
	}

	default ResponseEntity<List<RankingUser>> ranking(List<Long> userIds) {
		return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
	}

	@ApiOperation(value = "Get ranking for a set of users.", nickname = "getRanking", notes = "Calculate the ranking for the given user ids. The calculation is based on the exercises the user has done in the last 28 days. The list is sorted in descending order by user points. ", response = RankingUser.class, responseContainer = "List", tags = {})
	@ApiResponses(value = {
			@ApiResponse(code = 200, message = "Ranking calculated", response = RankingUser.class, responseContainer = "List") })
	@RequestMapping(value = "/ranking", produces = { "application/json" }, method = RequestMethod.GET)
	default ResponseEntity<List<RankingUser>> getRanking(
			@NotNull @ApiParam(value = "List of user ids to rank", required = true) @Valid @RequestParam(value = "userIds", required = true) List<Long> userIds) {
		return ranking(userIds);
	}

}
